<?xml version="1.0" ?>

<!--<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Trace"
      internalLogFile="D:\work\log.txt">-->

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      throwConfigExceptions="true"
      autoReload="true">
  <targets>
    <!-- Log in a separate thread, possibly queueing up to messages. When the queue overflows, discard any extra messages-->
    <!-- write logs to file -->
    <target name="file" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${basedir}/logs/${shortdate}.log"
      layout="${date:format=yyyy-MM-dd HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${var:osVersion} | ${var:netVersion} | ${var:userName} | ${message} ${exception} ${stacktrace}" />
    </target>

    <!-- write log message to database -->
    <target name="db" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target type="Database" dbProvider="mssql" connectionString="Data Source=58.252.2.101;Initial Catalog=TeslaLog;Persist Security Info=True;User ID=sa;Password=PY-123456;">
        <commandText>
          INSERT INTO Log(Timestamp,Level,Message,StackTrace,Exception,OsVersion,NetVersion,UserName) VALUES(@time_stamp, @level, @message, @stacktrace,@exception,@osVersion,@netVersion,@userName);
        </commandText>
        <!-- database connection parameters -->
        <parameter name="@time_stamp" layout="${date}" />
        <parameter name="@level" layout="${level:uppercase=true}" />
        <parameter name="@message" layout="${message}" />
        <parameter name="@stacktrace" layout="${stacktrace}" />
        <parameter name="@exception" layout="${exception}" />
        <parameter name="@userName" layout="${var:userName}" />
        <parameter name="@osVersion" layout="${var:oSVersion}" />
        <parameter name="@netVersion" layout="${var:netVersion}" />
      </target>
    </target>

    <!--write log message to console-->
    <target xsi:type="ColoredConsole"
         name="console"
         layout="${date:format=yyyy-MM-dd HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${var:osVersion} | ${var:netVersion} | ${var:userName} | ${message} ${exception} ${stacktrace}"
         useDefaultRowHighlightingRules="True"
         detectConsoleAvailable="False">
    </target>

    <!--write log message to logstash by http-->
    <target name="logstash" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="LogstashHttp"
         layout="${date:format=yyyy-MM-dd HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${var:osVersion} | ${var:netVersion} | ${var:userName} | ${message} | ${exception} | ${stacktrace}"
              >
      </target>
    </target>
  </targets>

  <rules>
    <!--TRACE,DEBUG,INFO,WARN,ERROR,FATAL-->
    <logger name="*" minlevel="Trace" writeTo="console" />

    <!--DEBUG,INFO,WARN,ERROR,FATAL-->
    <logger name="*" minlevel="Debug" writeTo="file" />

    <!--INFO,WARN,ERROR,FATAL-->
     <!--use logstash instead of db-->
    <!--<logger name="*" minlevel="Info" writeTo="db" />-->
    <logger name="*" minlevel="Info" writeTo="logstash" />
  </rules>
</nlog>